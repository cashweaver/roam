:PROPERTIES:
:ID:       ed982b37-6f8e-4b89-bb51-ac608510325e
:END:
#+title: Quicksort implementation in Python
#+author: Cash Weaver
#+date: [2022-06-30 Thu 13:57]
#+filetags: :concept:

#+begin_src python
from typing import List

def quick_sort(ints: List[int], low_index: int, high_index: int) -> List[int]:
    def swap(ints: List[int], indexA: int, indexB: int) -> None:
        """Swap the values in INTS at INDEXA and INDEXB."""
        valueA = ints[indexA]
        ints[indexA] = ints[indexB]
        ints[indexB] = valueA

    def partition(ints: List[int], low_index: int, high_index: int) -> int:
        """Sorts sublist into [{<= pivot}, pivot, {> than pivot}]"""
        pivot_index = high_index
        i = low_index - 1

        for j in range(low_index, high_index - 1):
            if list[j] <= list[pivot_index]:
                i += 1
                swap(i, j)
        i += 1
        swap(i, pivot_index)

        return i

    if low_index >= high_index or low_index < 0:
        return

    pivot_index = partition(ints, 0, len(ints))

    quick_sort(ints, 0, pivot_index - 1)
    quick_sort(ints, pivot_index + 1, high_index)

    return ints

return quick_sort([10, 4, 8, 1], 0, 3)
#+end_src

#+RESULTS:

* Anki :noexport:
:PROPERTIES:
:ANKI_DECK: Default
:END:
